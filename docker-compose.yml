version: "24.0.6"
services:

  bookdb:
    container_name: bookdb-container
    command: --default-authentication-plugin=mysql_native_password
    image: "mysql"
    restart: always
    networks:
      - bibliotech
    volumes:
      - bookVolume:/data/db
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=1
      - MYSQL_DATABASE=bookMicroService

  orderbd:
    container_name: orderbd-container
    command: --default-authentication-plugin=mysql_native_password
    image: "mysql"
    restart: always
    networks:
      - bibliotech
    volumes:
      - orderVolume:/data/db
    ports:
      - "3308:3306"
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=1
      - MYSQL_DATABASE=bookMicroService

  eureka-server:
    build:
      context: ../BiblioTechServer
      dockerfile: Dockerfile
    restart: always
    container_name: eureka-container
    image: eureka-image
    ports:
      - "8761:8761"
    networks:
      - bibliotech

  review-service:
    build:
      context: ../BiblioTechReview
      dockerfile: Dockerfile
    container_name: review-container
    image: review-image
    networks:
      - bibliotech
    depends_on:
      - eureka-server
    restart: always
    ports:
      - "8089:8089"
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/

  book-service:
    build:
      context: ../BiblioTechBook
      dockerfile: Dockerfile
    container_name: book-container
    image: book-image
    networks:
      - bibliotech
    depends_on:
      - eureka-server
      - bookdb
    restart: always
    ports:
      - "8087:8087"
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://bookdb:3306/bookMicroService?useUnicode=true&useJDBCCompliantTimezoneShift=true&createDatabaseIfNotExist=true&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true

  order-service:
    build:
      context: ../BiblioTechOrder
      dockerfile: Dockerfile
    container_name: order-container
    image: order-image
    networks:
      - bibliotech
    depends_on:
      - eureka-server
      - orderbd
    restart: always
    ports:
      - "8082:8082"
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://orderbd:3306/Order?useUnicode=true&useJDBCCompliantTimezoneShift=true&createDatabaseIfNotExist=true&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true

  api-gateway:
    build:
      context: ../BiblioTechAPIGateway
      dockerfile: Dockerfile
    container_name: api-gateway-container
    image: api-gateway-image
    restart: always
    networks:
      - bibliotech
    depends_on:
      - eureka-server
      - review-service
      - book-service
      - order-service
    ports:
      - "8081:8081"
    environment:
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka
#      - eureka.instance.preferIpAddress=true
#      - eureka.instance.leaseRenewalIntervalInSeconds=10
#      - eureka.instance.leaseExpirationDurationInSeconds=30
      - spring.cloud.gateway.routes[0].id=review
      - spring.cloud.gateway.routes[0].uri=http://localhost:8089
      - spring.cloud.gateway.routes[0].predicates[0]=Path=/review/**
      - spring.cloud.gateway.routes[1].id=book
      - spring.cloud.gateway.routes[1].uri=http://localhost:8087
      - spring.cloud.gateway.routes[1].predicates[0]=Path=/book/**
      - spring.cloud.gateway.routes[2].id=order
      - spring.cloud.gateway.routes[2].uri=http://localhost:8082
      - spring.cloud.gateway.routes[2].predicates[0]=Path=/order/**

networks:
  bibliotech:
    name: bibliotech
volumes:
  bookVolume:
  orderVolume:
